# Performance tuning
worker_processes auto;
worker_rlimit_nofile 1048576;

events {
    worker_connections 65535;
    use epoll;
    multi_accept on;
}

http {
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    directio 10m;
    aio threads;
    output_buffers 4 64k;
    
    # Memory optimization settings
    proxy_buffering on;
    proxy_buffer_size 16k;
    proxy_buffers 256 16k;
    proxy_busy_buffers_size 4m;
    proxy_temp_file_write_size 4m;
    proxy_max_temp_file_size 128m;
    
    # Connection and file caching
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Configure cache paths for all 4 disk partitions (each ~465GB, using 400GB to leave headroom)
    # Increased keys_zone from 100m to 2000m (2GB) for better metadata caching in RAM
    proxy_cache_path /cache/disk1 levels=1:2 keys_zone=s3_cache_1:2000m max_size=400g inactive=99999d use_temp_path=off;
    proxy_cache_path /cache/disk2 levels=1:2 keys_zone=s3_cache_2:2000m max_size=400g inactive=99999d use_temp_path=off;
    proxy_cache_path /cache/disk3 levels=1:2 keys_zone=s3_cache_3:2000m max_size=400g inactive=99999d use_temp_path=off;
    proxy_cache_path /cache/disk4 levels=1:2 keys_zone=s3_cache_4:2000m max_size=400g inactive=99999d use_temp_path=off;
    
    # Split clients to distribute load across cache zones
    split_clients "$request_uri" $cache_zone {
        25%     s3_cache_1;
        25%     s3_cache_2;
        25%     s3_cache_3;
        *       s3_cache_4;
    }
    
    resolver 127.0.0.11 8.8.8.8 8.8.4.4 valid=300s;  # Google DNS servers
    log_format cache_log '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     'CacheStatus=$upstream_cache_status';
    access_log /dev/stdout cache_log;

    server {
        listen 80 reuseport;
        proxy_headers_hash_max_size 1024;
        proxy_headers_hash_bucket_size 128;
        
        # Client body settings for better memory usage
        client_body_buffer_size 128k;
        client_max_body_size 0;
        client_body_timeout 120s;

        location / {
            set $backend "https://$host";

            proxy_pass $backend;
            proxy_set_header Host $host;
            proxy_set_header range $http_range;
            proxy_cache_lock on;

            # Remove headers
            proxy_set_header X-Real-IP "";
            proxy_set_header X-Forwarded-For "";
            proxy_set_header X-Forwarded-Proto "";
            proxy_set_header X-Forwarded-Port "";

            proxy_cache_valid 200 206 7d;
            proxy_cache $cache_zone;
            proxy_cache_key "$scheme$host$request_uri$http_range";
            proxy_ignore_headers Cache-Control Expires Set-Cookie;
            proxy_hide_header Set-Cookie;
            proxy_ignore_client_abort on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-Cache-Node $hostname always;
        }
        
        location /cache-stats {
            stub_status;
            access_log off;
            allow all;
        }
        
        location /health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}
